<?xml version="1.0" encoding="UTF-8"?><record_update table="sc_cat_item_producer">
    <sc_cat_item_producer action="DELETE">
        <access_type>restricted</access_type>
        <active>false</active>
        <allow_edit>false</allow_edit>
        <availability>on_desktop</availability>
        <billable>false</billable>
        <can_cancel>false</can_cancel>
        <category/>
        <checked_out>false</checked_out>
        <cost>0</cost>
        <custom_cart/>
        <delivery_plan/>
        <delivery_plan_script/>
        <delivery_time>1970-01-03 00:00:00</delivery_time>
        <description><![CDATA[<p>Create Token</p>]]></description>
        <display_price_property>non_zero</display_price_property>
        <entitlement_script/>
        <flow_designer_flow/>
        <fulfillment_automation_level>unspecified</fulfillment_automation_level>
        <group/>
        <hide_sp>false</hide_sp>
        <icon/>
        <ignore_price>true</ignore_price>
        <image/>
        <location/>
        <mandatory_attachment>false</mandatory_attachment>
        <meta/>
        <mobile_hide_price>false</mobile_hide_price>
        <mobile_picture/>
        <mobile_picture_type>use_desktop_picture</mobile_picture_type>
        <model/>
        <name>Create Token</name>
        <no_attachment_v2>false</no_attachment_v2>
        <no_cart>false</no_cart>
        <no_cart_v2>false</no_cart_v2>
        <no_delivery_time_v2>false</no_delivery_time_v2>
        <no_order>false</no_order>
        <no_order_now>false</no_order_now>
        <no_proceed_checkout>false</no_proceed_checkout>
        <no_quantity>false</no_quantity>
        <no_quantity_v2>false</no_quantity_v2>
        <no_search>false</no_search>
        <no_wishlist_v2>false</no_wishlist_v2>
        <omit_price>false</omit_price>
        <order>0</order>
        <ordered_item_link/>
        <owner display_value="System Administrator">6816f79cc0a8016401c5a33be04be441</owner>
        <picture/>
        <post_insert_script><![CDATA[/**
* This script is executed after the record is generated. 
* `current` Is the GlideRecord produced by Record Producer. Use `current.update()` to update the record
* To access the variables, use `producer.var1` where var1 is the name of the variable
* To access the Record Producer use `cat_item`
*/]]></post_insert_script>
        <preview>JavaScript: popupOpenStandard("com.glideapp.servicecatalog_cat_item_view.do?v=1&amp;sysparm_id=829f72d587f4d15005a60d05dabb354d&amp;sysparm_preview=true", "summary");</preview>
        <price>0</price>
        <published_ref display_value="Create Token">741cf56987a4d51005a60d05dabb35cd</published_ref>
        <recurring_frequency/>
        <redirect_url>generated_record</redirect_url>
        <request_method/>
        <roles/>
        <save_options/>
        <save_script><![CDATA[/**
* This script is executed at every step save in Catalog Builder. 
* This script is executed before `Script` is executed.
* `current` Is the GlideRecord produced by Record Producer. 
* To access the variables, use `producer.var1` where var1 is the name of the variable
* To access the Record Producer use `cat_item`
*/]]></save_script>
        <sc_catalogs/>
        <sc_ic_item_staging/>
        <sc_ic_version/>
        <sc_template/>
        <script><![CDATA[try {
    var inputs = {};

    var treasury_account = new GlideRecord("x_snc_hhoverlay_account")
    treasury_account.get(producer.treasury_account)

    var rem_treasury_account = new GlideRecord("x_snc_hhoverlay_st_account")
    rem_treasury_account.get(treasury_account.account_id)

    var sign_with = new GlideRecord("x_snc_hhoverlay_key")
    sign_with.addQuery("public_key", "ENDSWITH", rem_treasury_account.key_suffix)
        .addOrCondition("sys_id", producer.admin_key.toString())
        .addOrCondition("sys_id", producer.supply_key.toString())
        .addOrCondition("sys_id", producer.pause_key.toString())
        .addOrCondition("sys_id", producer.freeze_key.toString())
        .addOrCondition("sys_id", producer.kyc_key.toString())
        .addOrCondition("sys_id", producer.wipe_key.toString())
	sign_with.query()
    inputs['sign_with'] = sign_with; // List 
	
    inputs['name'] = producer.name.toString(); // String 
    inputs['local_name'] = producer.name.toString()
    inputs['symbol'] = producer.symbol.toString(); // String 
    inputs['type'] = producer.type.toString(); // Choice 
    inputs['treasury_account'] = treasury_account // Reference 

    if (producer.memo.toString() != '') {
        inputs['memo'] = producer.memo.toString();
    } // String 

    if (producer.initial_supply.toString() != '') {
        inputs['initial_supply'] = producer.initial_supply.toString();
    } // String 

    if (producer.decimals.toString() != '') {
        inputs['decimals'] = producer.decimals.toString();
    } // String 

    if (producer.max_supply.toString() != '') {
        inputs['max_supply'] = producer.max_supply.toString();
    } // String 

    if (producer.admin_key) {
        var admin_key = new GlideRecord("x_snc_hhoverlay_key")
        admin_key.get(producer.admin_key)
        inputs['admin_key'] = admin_key
    } // String 

    if (producer.supply_key) {
        var supply_key = new GlideRecord("x_snc_hhoverlay_key")
        supply_key.get(producer.supply_key)
        inputs['supply_key'] = supply_key
    } // String 

    if (producer.pause_key) {
        var pause_key = new GlideRecord("x_snc_hhoverlay_key")
        pause_key.get(producer.pause_key)
        inputs['pause_key'] = pause_key
    } // String 

    if (producer.freeze_key) {
        var freeze_key = new GlideRecord("x_snc_hhoverlay_key")
        freeze_key.get(producer.freeze_key)
        inputs['freeze_key'] = freeze_key
    } // String 

    if (producer.kyc_key) {
        var kyc_key = new GlideRecord("x_snc_hhoverlay_key")
        kyc_key.get(producer.kyc_key)
        inputs['kyc_key'] = kyc_key

    } // String 

    if (producer.wipe_key) {
        var wipe_key = new GlideRecord("x_snc_hhoverlay_key")
        wipe_key.get(producer.wipe_key)
        inputs['wipe_key'] = wipe_key
    } // String 

    var result = sn_fd.FlowAPI.getRunner().subflow('x_snc_hhoverlay.create_token').inForeground().withInputs(inputs).run();
    var outputs = result.getOutputs();
	
    var token = outputs['token']; // Reference
    var transaction = outputs['transaction']; // Reference

    producer.redirect = token.getLink(true);

} catch (ex) {
    var message = ex.getMessage();
    gs.addErrorMessage(message);
}]]></script>
        <short_description>Create Token</short_description>
        <show_variable_help_on_load>false</show_variable_help_on_load>
        <start_closed>false</start_closed>
        <state>draft</state>
        <sys_class_name>sc_cat_item_producer</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-07-19 09:50:49</sys_created_on>
        <sys_id>829f72d587f4d15005a60d05dabb354d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Create Token</sys_name>
        <sys_package display_value="hhoverlay" source="x_snc_hhoverlay">4d189a5d8794d15005a60d05dabb3582</sys_package>
        <sys_policy/>
        <sys_scope display_value="hhoverlay">4d189a5d8794d15005a60d05dabb3582</sys_scope>
        <sys_update_name>sc_cat_item_producer_829f72d587f4d15005a60d05dabb354d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-07-19 09:50:49</sys_updated_on>
        <table_name>x_snc_hhoverlay_req</table_name>
        <taxonomy_topic/>
        <template/>
        <template_manager_roles/>
        <type>item</type>
        <use_sc_layout>true</use_sc_layout>
        <vendor/>
        <view/>
        <visible_bundle>true</visible_bundle>
        <visible_guide>true</visible_guide>
        <visible_standalone>true</visible_standalone>
        <workflow/>
    </sc_cat_item_producer>
    <sys_translated_text action="DELETE" query="documentkey=829f72d587f4d15005a60d05dabb354d"/>
    <fx_price action="DELETE" query="id=829f72d587f4d15005a60d05dabb354d"/>
    <fx_price action="DELETE">
        <amount>0</amount>
        <currency display_value="USD">USD</currency>
        <field>price</field>
        <id>829f72d587f4d15005a60d05dabb354d</id>
        <parent/>
        <reference_amount>0</reference_amount>
        <reference_currency display_value="USD">USD</reference_currency>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-07-19 09:50:49</sys_created_on>
        <sys_id>469f72d587f4d15005a60d05dabb354e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-07-19 09:50:49</sys_updated_on>
        <table>sc_cat_item_producer</table>
        <type>calculated</type>
    </fx_price>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="hhoverlay">4d189a5d8794d15005a60d05dabb3582</application>
        <file_path/>
        <instance_id>77d51ed5db7f415849eac597059619bd</instance_id>
        <instance_name>hederarest</instance_name>
        <name>sc_cat_item_producer_829f72d587f4d15005a60d05dabb354d</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sc_cat_item_producer"&gt;&lt;sc_cat_item_producer action="INSERT_OR_UPDATE"&gt;&lt;access_type&gt;restricted&lt;/access_type&gt;&lt;active&gt;false&lt;/active&gt;&lt;allow_edit&gt;false&lt;/allow_edit&gt;&lt;availability&gt;on_desktop&lt;/availability&gt;&lt;billable&gt;false&lt;/billable&gt;&lt;can_cancel&gt;false&lt;/can_cancel&gt;&lt;category/&gt;&lt;checked_out&gt;false&lt;/checked_out&gt;&lt;cost&gt;0&lt;/cost&gt;&lt;custom_cart/&gt;&lt;delivery_plan/&gt;&lt;delivery_plan_script/&gt;&lt;delivery_time&gt;1970-01-03 00:00:00&lt;/delivery_time&gt;&lt;description&gt;&lt;![CDATA[&lt;p&gt;Create Token&lt;/p&gt;]]&gt;&lt;/description&gt;&lt;display_price_property&gt;non_zero&lt;/display_price_property&gt;&lt;entitlement_script/&gt;&lt;flow_designer_flow/&gt;&lt;fulfillment_automation_level&gt;unspecified&lt;/fulfillment_automation_level&gt;&lt;group/&gt;&lt;hide_sp&gt;false&lt;/hide_sp&gt;&lt;icon/&gt;&lt;ignore_price&gt;true&lt;/ignore_price&gt;&lt;image/&gt;&lt;location/&gt;&lt;mandatory_attachment&gt;false&lt;/mandatory_attachment&gt;&lt;meta/&gt;&lt;mobile_hide_price&gt;false&lt;/mobile_hide_price&gt;&lt;mobile_picture/&gt;&lt;mobile_picture_type&gt;use_desktop_picture&lt;/mobile_picture_type&gt;&lt;model/&gt;&lt;name&gt;Create Token&lt;/name&gt;&lt;no_attachment_v2&gt;false&lt;/no_attachment_v2&gt;&lt;no_cart&gt;false&lt;/no_cart&gt;&lt;no_cart_v2&gt;false&lt;/no_cart_v2&gt;&lt;no_delivery_time_v2&gt;false&lt;/no_delivery_time_v2&gt;&lt;no_order&gt;false&lt;/no_order&gt;&lt;no_order_now&gt;false&lt;/no_order_now&gt;&lt;no_proceed_checkout&gt;false&lt;/no_proceed_checkout&gt;&lt;no_quantity&gt;false&lt;/no_quantity&gt;&lt;no_quantity_v2&gt;false&lt;/no_quantity_v2&gt;&lt;no_search&gt;false&lt;/no_search&gt;&lt;no_wishlist_v2&gt;false&lt;/no_wishlist_v2&gt;&lt;omit_price&gt;false&lt;/omit_price&gt;&lt;order&gt;0&lt;/order&gt;&lt;ordered_item_link/&gt;&lt;owner display_value="System Administrator"&gt;6816f79cc0a8016401c5a33be04be441&lt;/owner&gt;&lt;picture/&gt;&lt;post_insert_script&gt;&lt;![CDATA[/**
* This script is executed after the record is generated. 
* `current` Is the GlideRecord produced by Record Producer. Use `current.update()` to update the record
* To access the variables, use `producer.var1` where var1 is the name of the variable
* To access the Record Producer use `cat_item`
*/]]&gt;&lt;/post_insert_script&gt;&lt;preview&gt;JavaScript: popupOpenStandard("com.glideapp.servicecatalog_cat_item_view.do?v=1&amp;amp;sysparm_id=829f72d587f4d15005a60d05dabb354d&amp;amp;sysparm_preview=true", "summary");&lt;/preview&gt;&lt;price&gt;0&lt;/price&gt;&lt;published_ref display_value="Create Token"&gt;741cf56987a4d51005a60d05dabb35cd&lt;/published_ref&gt;&lt;recurring_frequency/&gt;&lt;redirect_url&gt;generated_record&lt;/redirect_url&gt;&lt;request_method/&gt;&lt;roles/&gt;&lt;save_options/&gt;&lt;save_script&gt;&lt;![CDATA[/**
* This script is executed at every step save in Catalog Builder. 
* This script is executed before `Script` is executed.
* `current` Is the GlideRecord produced by Record Producer. 
* To access the variables, use `producer.var1` where var1 is the name of the variable
* To access the Record Producer use `cat_item`
*/]]&gt;&lt;/save_script&gt;&lt;sc_catalogs/&gt;&lt;sc_ic_item_staging/&gt;&lt;sc_ic_version/&gt;&lt;sc_template/&gt;&lt;script&gt;&lt;![CDATA[try {
    var inputs = {};

    var treasury_account = new GlideRecord("x_snc_hhoverlay_account")
    treasury_account.get(producer.treasury_account)

    var rem_treasury_account = new GlideRecord("x_snc_hhoverlay_st_account")
    rem_treasury_account.get(treasury_account.account_id)

    var sign_with = new GlideRecord("x_snc_hhoverlay_key")
    sign_with.addQuery("public_key", "ENDSWITH", rem_treasury_account.key_suffix)
        .addOrCondition("sys_id", producer.admin_key.toString())
        .addOrCondition("sys_id", producer.supply_key.toString())
        .addOrCondition("sys_id", producer.pause_key.toString())
        .addOrCondition("sys_id", producer.freeze_key.toString())
        .addOrCondition("sys_id", producer.kyc_key.toString())
        .addOrCondition("sys_id", producer.wipe_key.toString())
	sign_with.query()
    inputs['sign_with'] = sign_with; // List 
	
    inputs['name'] = producer.name.toString(); // String 
    inputs['local_name'] = producer.name.toString()
    inputs['symbol'] = producer.symbol.toString(); // String 
    inputs['type'] = producer.type.toString(); // Choice 
    inputs['treasury_account'] = treasury_account // Reference 

    if (producer.memo.toString() != '') {
        inputs['memo'] = producer.memo.toString();
    } // String 

    if (producer.initial_supply.toString() != '') {
        inputs['initial_supply'] = producer.initial_supply.toString();
    } // String 

    if (producer.decimals.toString() != '') {
        inputs['decimals'] = producer.decimals.toString();
    } // String 

    if (producer.max_supply.toString() != '') {
        inputs['max_supply'] = producer.max_supply.toString();
    } // String 

    if (producer.admin_key) {
        var admin_key = new GlideRecord("x_snc_hhoverlay_key")
        admin_key.get(producer.admin_key)
        inputs['admin_key'] = admin_key
    } // String 

    if (producer.supply_key) {
        var supply_key = new GlideRecord("x_snc_hhoverlay_key")
        supply_key.get(producer.supply_key)
        inputs['supply_key'] = supply_key
    } // String 

    if (producer.pause_key) {
        var pause_key = new GlideRecord("x_snc_hhoverlay_key")
        pause_key.get(producer.pause_key)
        inputs['pause_key'] = pause_key
    } // String 

    if (producer.freeze_key) {
        var freeze_key = new GlideRecord("x_snc_hhoverlay_key")
        freeze_key.get(producer.freeze_key)
        inputs['freeze_key'] = freeze_key
    } // String 

    if (producer.kyc_key) {
        var kyc_key = new GlideRecord("x_snc_hhoverlay_key")
        kyc_key.get(producer.kyc_key)
        inputs['kyc_key'] = kyc_key

    } // String 

    if (producer.wipe_key) {
        var wipe_key = new GlideRecord("x_snc_hhoverlay_key")
        wipe_key.get(producer.wipe_key)
        inputs['wipe_key'] = wipe_key
    } // String 

    var result = sn_fd.FlowAPI.getRunner().subflow('x_snc_hhoverlay.create_token').inForeground().withInputs(inputs).run();
    var outputs = result.getOutputs();
	
    var token = outputs['token']; // Reference
    var transaction = outputs['transaction']; // Reference

    producer.redirect = token.getLink(true);

} catch (ex) {
    var message = ex.getMessage();
    gs.addErrorMessage(message);
}]]&gt;&lt;/script&gt;&lt;short_description&gt;Create Token&lt;/short_description&gt;&lt;show_variable_help_on_load&gt;false&lt;/show_variable_help_on_load&gt;&lt;start_closed&gt;false&lt;/start_closed&gt;&lt;state&gt;draft&lt;/state&gt;&lt;sys_class_name&gt;sc_cat_item_producer&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2022-07-19 09:50:49&lt;/sys_created_on&gt;&lt;sys_id&gt;829f72d587f4d15005a60d05dabb354d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;Create Token&lt;/sys_name&gt;&lt;sys_package display_value="hhoverlay" source="x_snc_hhoverlay"&gt;4d189a5d8794d15005a60d05dabb3582&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="hhoverlay"&gt;4d189a5d8794d15005a60d05dabb3582&lt;/sys_scope&gt;&lt;sys_update_name&gt;sc_cat_item_producer_829f72d587f4d15005a60d05dabb354d&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2022-07-19 09:50:49&lt;/sys_updated_on&gt;&lt;table_name&gt;x_snc_hhoverlay_req&lt;/table_name&gt;&lt;taxonomy_topic/&gt;&lt;template/&gt;&lt;template_manager_roles/&gt;&lt;type&gt;item&lt;/type&gt;&lt;use_sc_layout&gt;true&lt;/use_sc_layout&gt;&lt;vendor/&gt;&lt;view/&gt;&lt;visible_bundle&gt;true&lt;/visible_bundle&gt;&lt;visible_guide&gt;true&lt;/visible_guide&gt;&lt;visible_standalone&gt;true&lt;/visible_standalone&gt;&lt;workflow/&gt;&lt;/sc_cat_item_producer&gt;&lt;sys_translated_text action="delete_multiple" query="documentkey=829f72d587f4d15005a60d05dabb354d"/&gt;&lt;fx_price action="delete_multiple" query="id=829f72d587f4d15005a60d05dabb354d"/&gt;&lt;fx_price action="INSERT_OR_UPDATE"&gt;&lt;amount&gt;0&lt;/amount&gt;&lt;currency display_value="USD"&gt;USD&lt;/currency&gt;&lt;field&gt;price&lt;/field&gt;&lt;id&gt;829f72d587f4d15005a60d05dabb354d&lt;/id&gt;&lt;parent/&gt;&lt;reference_amount&gt;0&lt;/reference_amount&gt;&lt;reference_currency display_value="USD"&gt;USD&lt;/reference_currency&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2022-07-19 09:50:49&lt;/sys_created_on&gt;&lt;sys_id&gt;469f72d587f4d15005a60d05dabb354e&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2022-07-19 09:50:49&lt;/sys_updated_on&gt;&lt;table&gt;sc_cat_item_producer&lt;/table&gt;&lt;type&gt;calculated&lt;/type&gt;&lt;/fx_price&gt;&lt;/record_update&gt;</payload>
        <payload_hash>-1143365238</payload_hash>
        <record_name>Create Token</record_name>
        <reverted_from/>
        <source>91189a5d8794d15005a60d05dabb3585</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-07-19 09:50:49</sys_created_on>
        <sys_id>4e9f72d587f4d15005a60d05dabb3551</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>18215de0a790000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-07-19 09:50:49</sys_updated_on>
        <type>Record Producer</type>
        <update_guid>829f72d517f4d150e7cd310daefef851</update_guid>
        <update_guid_history>829f72d517f4d150e7cd310daefef851:-1143365238</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="Create Token">b5df3ed587f4d15005a60d05dabb3523</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-07-19 09:51:53</sys_created_on>
        <sys_db_object display_value="" name="sc_cat_item_producer">sc_cat_item_producer</sys_db_object>
        <sys_id>0c9e8a168d41403b8cc3d8f9c787c5b1</sys_id>
        <sys_metadata>829f72d587f4d15005a60d05dabb354d</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Create Token</sys_name>
        <sys_package display_value="hhoverlay" source="x_snc_hhoverlay">4d189a5d8794d15005a60d05dabb3582</sys_package>
        <sys_parent display_value="Req">cb80f6198718d15005a60d05dabb358c</sys_parent>
        <sys_policy/>
        <sys_scope display_value="hhoverlay">4d189a5d8794d15005a60d05dabb3582</sys_scope>
        <sys_scope_delete display_value="">1700d450dfb141d88486ea39fe7b52c4</sys_scope_delete>
        <sys_update_name>sc_cat_item_producer_829f72d587f4d15005a60d05dabb354d</sys_update_name>
        <sys_update_version display_value="sc_cat_item_producer_829f72d587f4d15005a60d05dabb354d">4e9f72d587f4d15005a60d05dabb3551</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-07-19 09:51:53</sys_updated_on>
    </sys_metadata_delete>
</record_update>
