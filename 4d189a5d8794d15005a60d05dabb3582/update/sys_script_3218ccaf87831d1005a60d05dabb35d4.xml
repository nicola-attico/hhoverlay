<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_snc_hhoverlay_chunk</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Build messages</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    gr = new GlideRecord("x_snc_hhoverlay_message")
    if (current.total == 1) {
        gr.initialize()
        gr.sequence_number = current.sequence_number
        gr.message64 = current.message64
		gr.message = gs.base64Decode(current.message64)
        gr.topic_id = current.topic_id
        gr.transaction_valid_start = current.transaction_valid_start
        gr.consensus_timestamp = current.consensus_timestamp
        gr.insert()
    } else {
        chunks = new GlideRecord("x_snc_hhoverlay_chunk")
        chunks.addQuery("topic_id", current.topic_id)
        chunks.addQuery("transaction_valid_start", current.transaction_valid_start)
        chunks.orderBy("number")
        chunks.query()
        var x = chunks.getRowCount()

        if (x == current.total) {
            gs.info("outcome true")
            var message = ""
            while (chunks.next()) {
                message = message + chunks.message
            }
            gr.initialize()
            gr.sequence_number = current.sequence_number
            gr.message64 = gs.base64Encode(message)
			gr.message = message
            gr.topic_id = current.topic_id
            gr.transaction_valid_start = current.transaction_valid_start
            gr.insert()
        }
    }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-11-14 16:37:08</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>3218ccaf87831d1005a60d05dabb35d4</sys_id>
        <sys_mod_count>31</sys_mod_count>
        <sys_name>Build messages</sys_name>
        <sys_overrides/>
        <sys_package display_value="hhoverlay" source="x_snc_hhoverlay">4d189a5d8794d15005a60d05dabb3582</sys_package>
        <sys_policy/>
        <sys_scope display_value="hhoverlay">4d189a5d8794d15005a60d05dabb3582</sys_scope>
        <sys_update_name>sys_script_3218ccaf87831d1005a60d05dabb35d4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-11-15 13:44:13</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=3218ccaf87831d1005a60d05dabb35d4"/>
</record_update>
